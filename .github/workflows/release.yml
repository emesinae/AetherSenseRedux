name: Release

on:
  push:
    tags-ignore:
      - testing_*
  workflow_dispatch:

jobs:
  build:
    runs-on: windows-latest
    steps:
      - uses: actions/checkout@v4
        with:
          # submodules: recursive
          fetch-depth: 0
          fetch-tags: true
      - uses: hustcer/setup-nu@v3
        with:
          version: "*"
      - name: Setup .NET
        uses: actions/setup-dotnet@v4
        with:
          dotnet-version: "9.x.x"
          cache: true
          cache-dependency-path: AetherSenseRedux/packages.lock.json
      - name: Restore dependencies
        run: dotnet restore
      - name: Download Dalamud
        run: |
          Invoke-WebRequest -Uri https://goatcorp.github.io/dalamud-distrib/stg/latest.zip -OutFile latest.zip
          Expand-Archive -Force latest.zip "$env:AppData\XIVLauncher\addon\Hooks\dev"

      - name: Setup git
        run: |
          git config --global user.name "Actions User"
          git config --global user.email "actions@github.com"

      - name: Install Versionize
        run: dotnet tool install --global Versionize
      - name: Versionize dry run
        run: versionize --dry-run
      - name: Versionize Release
        id: versionize
        run: versionize
        continue-on-error: true
      - name: No release required
        if: steps.versionize.outcome != 'success'
        run: echo "Skipping Release. No release required."
      - name: Retrieve version
        id: version
        shell: bash
        run: |
          echo "Retrieved version: $(versionize inspect)"
          echo "VERSION=$(versionize inspect)" >> "$GITHUB_OUTPUT"

      - name: Build
        if: steps.versionize.outcome == 'success'
        run: |
          invoke-expression 'dotnet build --no-restore --configuration Release --nologo'

      - name: Archive
        if: steps.versionize.outcome == 'success'
        run: Compress-Archive -Path AetherSenseRedux/bin/Release/* -DestinationPath AetherSenseRedux.zip
      - name: Upload a Build Artifact
        if: steps.versionize.outcome == 'success'
        uses: actions/upload-artifact@v4.4.3
        with:
          path: |
            ./AetherSenseRedux/bin/Release/*
      - name: Create Release
        if: steps.versionize.outcome == 'success'
        id: create_release
        uses: softprops/action-gh-release@v2
        with:
          tag_name: v${{ steps.version.outputs.VERSION }}
          name: AetherSenseRedux ${{ steps.version.outputs.VERSION }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: |
            ./AetherSenseRedux.zip
      - name: Write out repo.json
        id: generate_repo_file
        if: steps.versionize.outcome == 'success'
        shell: nu {0}
        run: |
          const version = '${{ steps.version.outputs.VERSION }}'
          const outputPath = './repo.json'

          let releaseAssets = '${{ steps.create_release.outputs.assets }}' | from json
          let downloadUrl = $releaseAssets.0.browser_download_url

          mut pkg = open './AetherSenseRedux/bin/Release/AetherSenseRedux.json'
          $pkg = $pkg | merge {
            DownloadLinkInstall: $downloadUrl,
            DownloadLinkUpdate: $downloadUrl
          }

          let repo = [$pkg]
          $repo | to json | save -f $outputPath
      - name: Commit repo.json
        if: steps.versionize.outcome == 'success' && steps.generate_repo_file.outcome == 'success'
        run: |
          git add repo.json
          git commit --amend --no-edit || true
          git push --follow-tags origin main
